{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d1b00607",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: pyaudio in c:\\users\\user\\anaconda3\\lib\\site-packages (0.2.14)\n"
     ]
    }
   ],
   "source": [
    "!pip install pyaudio"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a8034d8f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Device 0:  - Input\n",
      "\tIndex: 0, Input channels: 2, Output channels: 0\n",
      "Device 1: РњРёРєСЂРѕС„РѕРЅ (Realtek High Definiti\n",
      "\tIndex: 1, Input channels: 2, Output channels: 0\n",
      "Device 2:  - Output\n",
      "\tIndex: 2, Input channels: 0, Output channels: 2\n",
      "Device 3: Р”РёРЅР°РјРёРєРё (Realtek High Definiti\n",
      "\tIndex: 3, Input channels: 0, Output channels: 2\n",
      "Device 4: РџРµСЂРІРёС‡РЅС‹Р№ РґСЂР°Р№РІРµСЂ Р·Р°РїРёСЃРё Р·РІСѓРєР°\n",
      "\tIndex: 4, Input channels: 2, Output channels: 0\n",
      "Device 5: РњРёРєСЂРѕС„РѕРЅ (Realtek High Definition Audio)\n",
      "\tIndex: 5, Input channels: 2, Output channels: 0\n",
      "Device 6: РџРµСЂРІРёС‡РЅС‹Р№ Р·РІСѓРєРѕРІРѕР№ РґСЂР°Р№РІРµСЂ\n",
      "\tIndex: 6, Input channels: 0, Output channels: 2\n",
      "Device 7: Р”РёРЅР°РјРёРєРё (Realtek High Definition Audio)\n",
      "\tIndex: 7, Input channels: 0, Output channels: 2\n",
      "Device 8: Р”РёРЅР°РјРёРєРё (Realtek High Definition Audio)\n",
      "\tIndex: 8, Input channels: 0, Output channels: 2\n",
      "Device 9: РњРёРєСЂРѕС„РѕРЅ (Realtek High Definition Audio)\n",
      "\tIndex: 9, Input channels: 2, Output channels: 0\n",
      "Device 10: Speakers (Realtek HD Audio output)\n",
      "\tIndex: 10, Input channels: 0, Output channels: 2\n",
      "Device 11: РЎС‚РµСЂРµРѕ РјРёРєС€РµСЂ (Realtek HD Audio Stereo input)\n",
      "\tIndex: 11, Input channels: 2, Output channels: 0\n",
      "Device 12: РњРёРєСЂРѕС„РѕРЅ (Realtek HD Audio Mic input)\n",
      "\tIndex: 12, Input channels: 2, Output channels: 0\n"
     ]
    }
   ],
   "source": [
    "import pyaudio\n",
    "\n",
    "p = pyaudio.PyAudio()\n",
    "for i in range(p.get_device_count()):\n",
    "    device_info = p.get_device_info_by_index(i)\n",
    "    print(f\"Device {i}: {device_info['name']}\")\n",
    "    print(f\"\\tIndex: {i}, Input channels: {device_info['maxInputChannels']}, Output channels: {device_info['maxOutputChannels']}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c5dd7c48",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: SpeechRecognition in c:\\users\\user\\anaconda3\\lib\\site-packages (3.10.1)\n",
      "Requirement already satisfied: requests>=2.26.0 in c:\\users\\user\\anaconda3\\lib\\site-packages (from SpeechRecognition) (2.31.0)\n",
      "Requirement already satisfied: typing-extensions in c:\\users\\user\\anaconda3\\lib\\site-packages (from SpeechRecognition) (4.7.1)\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\user\\anaconda3\\lib\\site-packages (from requests>=2.26.0->SpeechRecognition) (2.0.4)\n",
      "Requirement already satisfied: idna<4,>=2.5 in c:\\users\\user\\anaconda3\\lib\\site-packages (from requests>=2.26.0->SpeechRecognition) (3.4)\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\user\\anaconda3\\lib\\site-packages (from requests>=2.26.0->SpeechRecognition) (1.26.16)\n",
      "Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\user\\anaconda3\\lib\\site-packages (from requests>=2.26.0->SpeechRecognition) (2023.11.17)\n"
     ]
    }
   ],
   "source": [
    "!pip install SpeechRecognition\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "872a9b9e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Скажите что-нибудь:\n",
      "Распознаю речь...\n",
      "Распознанный текст: раз-два-три раз-два-три\n"
     ]
 }
   ],
   "source": [
    "import speech_recognition as sr\n",
    "\n",
    "def recognize_speech_from_microphone(device_index=None):\n",
    "    recognizer = sr.Recognizer()\n",
    "\n",
    "    # Получаем доступ к микрофону\n",
    "    with sr.Microphone(device_index=device_index) as source:\n",
    "        print(\"Скажите что-нибудь:\")\n",
    "        # Записываем аудио с микрофона\n",
    "        audio_data = recognizer.listen(source)\n",
    "\n",
    "    try:\n",
    "        print(\"Распознаю речь...\")\n",
    "        # Распознаем речь с использованием Google Speech Recognition\n",
    "        text = recognizer.recognize_google(audio_data, language='ru-RU')\n",
    "        return text\n",
    "    except sr.UnknownValueError:\n",
    "        print(\"Кажется, я не могу распознать речь\")\n",
    "    except sr.RequestError as e:\n",
    "        print(f\"Ошибка при запросе к сервису Google Speech Recognition: {e}\")\n",
    "\n",
    "recognized_text = recognize_speech_from_microphone(device_index=1)  # Замените 1 на соответствующий индекс вашего микрофона\n",
    "print(\"Распознанный текст:\", recognized_text)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ead977b7",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
